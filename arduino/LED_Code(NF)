   // This code is meant to take at most 10 inputs  (eventually 70) and display them in WS2812B individually addressed LEDs
   // 9/3/2018 : Now keeps track of what LEDs are on and how long each have been on (almost)
   // Changes needed: Find why the leds never turn off. currently the time on is not changing past 30miliseconds.
   // 
   

    #include <FastLED.h>
    #define LED_PIN     7
    #define NUM_LEDS    10
    #define BRIGHTNESS 30       // 0-64

    long previousMillis_1 = 0;
    long previousMillis_2 = 0;
    long onTime_1 = 10000; // 10 seconds
    long onTime_2 = 1000;   // 1 seconds   
    int ledStatus[] = {0,0,0,0,0,0,0,0,0,0,0};  // Each LED is assigned to the their according element. {LED1,LED2,LED3,...}
                                  // 0 will indicate that the LED is off. 1 will indicate that the LED is on
                                  // the intention for this is to let each LED have their own timing.
   
    CRGB leds[NUM_LEDS];
   
  /////////////////////////////////////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
    void setup() {
      Serial.begin(9600);                         // Serial communication at 9600buad.
      Serial.flush();                                         
      FastLED.addLeds<WS2812, LED_PIN, GRB>(leds, NUM_LEDS); 
      FastLED.setBrightness(BRIGHTNESS);
      FastLED.show();                              //Initializing all LEDs to off
      }     
     
   
    void loop() {
   while (Serial.available() > 0)
   {                                                         
     
      int input = Serial.read()-48;    // Only using integers for inputs.
      Serial.println(input);




                                               
      ledStatus[input] = 1;
      leds[input] = CRGB(255,0,0);                     // setting each number entered to its assigned LED
      Serial.print(" This is the led that is now set to 1: "); 
      Serial.print(ledStatus[1]);                      // making sure that the array was storing the new values as they were entered
      Serial.print("...This is the led that is now set to 1: ");
      Serial.print(ledStatus[2]);

     
      for(int ii = 1; ii<=1; ii++)
      {                                    //Storing the time the leds were turned on into previousMillis_X
        previousMillis_1 = millis();         // only testing with 2 LEDs.
        previousMillis_2 = millis();
      }                                 



     
    FastLED.show();              // turn on the led that has been entered             
                                     

    if ((ledStatus[1] == 1)  && (millis() - previousMillis_1 >= onTime_1))                 
    {                                          // checks if LED 1 has been on for 10 seconds or more                                   
      leds[1] = CRGB::Black;                  // if yes turn it off.                                   
      FastLED.show();
      ledStatus[1] = 0;
     //  Serial.print("stuck in 1");
     }

     
    if ((ledStatus[2] == 1) && (millis() - previousMillis_2 >= onTime_2))  // same as LED1 but 1 second.
    {
     
      leds[2] = CRGB::Black;
      FastLED.show();
      ledStatus[2] = 0;
     // Serial.print("stuck in 2");
    }

   
   }
                                 
   }



    


    

    

